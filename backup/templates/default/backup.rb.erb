# Backup Configuration File
#
# Use the "backup" block to add backup settings to the configuration file.
# The argument before the "do" in (backup "argument" do) is called a "trigger".
# This acts as the identifier for the configuration.
#
# In the example below we have a "mysql-backup-s3" trigger for the backup setting.
# All the configuration is done inside this block. To initialize the backup process for this block,
# you invoke it using the following command:
#
#   backup --run mysql-backup-s3
#
# You can add as many backup block settings as you want, just be sure every trigger is unique and you can run
# each of them separately.
#
# ADAPTERS
#  - MySQL
#  - PostgreSQL
#  - SQLite
#  - Archive
#  - Custom
#
# STORAGE METHODS
#  - S3      (Amazon)
#  - CF      (Rackspace Cloud Files)
#  - Dropbox (Dropbox Web Service)
#  - SCP     (Remote Server)
#  - FTP     (Remote Server)
#  - SFTP    (Remote Server)
#  - LOCAL   (Local Server)
#
# GLOBAL OPTIONS
#  - Keep Backups (keep_backups)
#  - Encrypt With Pasword (encrypt_with_password)
#  - Encrypt With GPG Public Key (encrypt_with_gpg_public_key)
#  - Notify (notify)
#
#  This is the "decrypt" command for all encrypted backups:
#    sudo backup --decrypt /path/to/encrypted/file
#
# Each Backup Setting can contain:
# - 1 Adapter
# - 1 Storage Method
# - Multiple Global Options
#
# The combination of these, however, do not matter! So experiment with it.
#
# You can also let Backup notify you by email on successfully created backups.
# - Just uncomment the block of code below (notifier_settings) and fill in your credentials.
# - Then for set "notify" to "true" in each (backup) block you wish to be notified of.
#
# For more information on "Backup", please refer to the wiki on github
#   http://wiki.github.com/meskyanichi/backup/configuration-file


# Notifier
#   Uncomment this if you want to enable notification by email on successful backup runs
#   You will also have to set "notify true" inside each backup block below to enable it for that particular backup
# notifier_settings do
#
#   to    "example1@gmail.com"
#   from  "example2@gmail.com"
#
#   smtp do
#     host            "smtp.gmail.com"
#     port            "587"
#     username        "example1@gmail.com"
#     password        "example1password"
#     authentication  "plain"
#     domain          "localhost.localdomain"
#     tls             true
#   end
#
# end


# Initialize with:
#  sudo backup --run mysql-backup-s3
backup "mysql-backup-s3" %> do

  adapter    <%= node[:backup][:database][:adapter].to_sym %> do
    user       <%= node[:backup][:database][:user] %>
    password   <%= node[:backup][:database][:password] %>
    database   <%= node[:backup][:database][:name]

    additional_options '--single-transaction'
  end

  storage :s3 do
    access_key_id     <%= node[:backup][:amazon][:access_key] %>
    secret_access_key <%= node[:backup][:amazon][:secret_access_key] %>
    bucket            <%= node[:backup][:amazon][:bucket]
    use_ssl           true
  end

  keep_backups <%= node[:backup][:keep_backups].to_i %>
  #encrypt_with_password 'password'
  notify false

end


# Initialize with:
#  sudo backup --run file-backup-s3
backup "file-backup-s3" do
  adapter :archove do
    file_root = <%= node[:backup][:file_root] %>

    files "#{file_root}/public/system"

    # backup more than one file with:
    # files ["path_to_files", "another_path_to_files"]
  end
end
