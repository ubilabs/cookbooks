<% unicorn_worker =  %x{grep -c processor /proc/cpuinfo}.strip.to_i * 2 %>
worker_processes <%= unicorn_worker %>

<% unicorn_worker.times do |worker| %>
  listen "/tmp/unicorn_<%= @application %>.<%= worker %>.sock"
  listen "127.0.0.1:<%= node[:unicorn][:base_port] + worker %>"
<% end %>

pid "<%= @path %>/shared/pids/unicorn_<%= @application %>.pid"
stderr_path "<%= @path %>/shared/log/unicorn_<%= @application %>.stderr.log"
stdout_path "<%= @path %>/shared/log/unicorn_<%= @application %>.stdout.log"

preload_app true
GC.respond_to?(:copy_on_write_friendly=) and
  GC.copy_on_write_friendly = true

before_fork do |server, worker|
  defined?(ActiveRecord::Base) and
   ActiveRecord::Base.connection.disconnect!

  old_pid = "#{server.config[:pid]}.oldbin"
  if old_pid != server.pid
    begin
      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
      Process.kill(sig, File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end
  #throttle forking
  sleep 1
end

after_fork do |server, worker|
  # the following is *required* for Rails + "preload_app true",
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection
end
